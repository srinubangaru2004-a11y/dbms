-- Step 1: Create a new database
CREATE DATABASE company_subquery_db;

-- Step 2: Use the database
USE company_subquery_db;

-- Step 3: Create Department table
CREATE TABLE Department (
    dept_id INT PRIMARY KEY,
    dept_name VARCHAR(50)
);

-- Step 4: Create Employee table
CREATE TABLE Employee (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(50),
    dept_id INT,
    salary FLOAT,
    FOREIGN KEY (dept_id) REFERENCES Department(dept_id)
);

-- Step 5: Insert data into Department
INSERT INTO Department (dept_id, dept_name) VALUES
(1, 'HR'),
(2, 'IT'),
(3, 'Finance');

-- Step 6: Insert data into Employee
INSERT INTO Employee (emp_id, emp_name, dept_id, salary) VALUES
(101, 'Anita', 1, 45000),
(102, 'Rahul', 2, 60000),
(103, 'Sneha', 2, 65000),
(104, 'Arjun', 3, 55000),
(105, 'Meera', 1, 47000);

-- Step 7: Display all records
SELECT * FROM Department;
SELECT * FROM Employee;

--------------------------------------------------------------
-- Step 8: NESTED QUERY - Example 1
-- Find employees earning more than the average salary of all employees
--------------------------------------------------------------
SELECT emp_name, salary
FROM Employee
WHERE salary > (SELECT AVG(salary) FROM Employee);

--------------------------------------------------------------
-- Step 9: NESTED QUERY - Example 2
-- Find employees who work in 'IT' or 'Finance' departments
--------------------------------------------------------------
SELECT emp_name, dept_id
FROM Employee
WHERE dept_id IN (
    SELECT dept_id FROM Department WHERE dept_name IN ('IT', 'Finance')
);

--------------------------------------------------------------
-- Step 10: CORRELATED SUBQUERY - Example 1
-- Find employees whose salary is greater than the average salary of their department
--------------------------------------------------------------
SELECT emp_name, dept_id, salary
FROM Employee e
WHERE salary > (
    SELECT AVG(salary)
    FROM Employee
    WHERE dept_id = e.dept_id
);

--------------------------------------------------------------
-- Step 11: CORRELATED SUBQUERY - Example 2
-- List departments that have at least one employee earning above 60,000
--------------------------------------------------------------
SELECT dept_name
FROM Department d
WHERE EXISTS (
    SELECT * FROM Employee e
    WHERE e.dept_id = d.dept_id AND e.salary > 60000
);

--------------------------------------------------------------
-- Step 12: CORRELATED SUBQUERY - Example 3
-- Find employees whose salary is the highest in their department
--------------------------------------------------------------
SELECT emp_name, dept_id, salary
FROM Employee e1
WHERE salary = (
    SELECT MAX(salary)
    FROM Employee e2
    WHERE e1.dept_id = e2.dept_id
);
